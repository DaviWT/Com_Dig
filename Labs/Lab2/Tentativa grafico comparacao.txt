%% Exemplo Antipodal

tic
close all
clear all
clc
warning off
BER_ap = [];
BER_ort = [];
energy = [];
Fs=100;
Ts=1;
Tb = Ts;
Pb = zeros(1,length(energy));
fprintf('Begin!\n');

% Doing the process to different values of amplitude
j=0;
for AMP=0:0.1:1.5   
    fprintf('Doing for Antipodal and AMP = %i\n',AMP);
    energy = cat(2, energy, AMP^2/Tb);
    N = 10000;

    bit1=ones(1,Fs);
    bit0=-ones(1,Fs);
    %y=[bit1 bit0 bit1 bit0 bit1];
    %t=0:1/Fs:5-1/Fs;

    % Generating random symbols
    y = zeros(1,N*Fs);   % Holds the random generated symbols
    inBits1 = zeros(1,N); % Holds the initial code message
    for i=1:N
        num = randint;
        inBits1(i) = num;
        if num==1
            y((1+(i-1)*100):100*i) = bit1;
        else
            y((1+(i-1)*100):100*i) = bit0;
        end
    end
    y=AMP.*y;
    t=0:1/Fs:N-1/Fs;

    %plot(t,y)
    %xlabel('tempo (s)');
    %axis([0 N -2 2])

    %figure

    h=[ones(1,Fs)];
    %t=0:1/Fs:1-1/Fs;
    %plot(t,h);
    %xlabel('tempo (s)');
    %ylabel('h(t)');
    %axis([0 1 0 1.2])

    %figure

    %r=conv(y,h)/Fs;
    %fim=length(r);
    %t=0:1/Fs:fim/Fs-1/Fs;
    %plot(t,r);
    %t_amostra=[Fs:Fs:N*Fs];
    %r_amostra=r(t_amostra);
    %t_amostra=t_amostra/Fs-1/Fs;
    %hold
    %stem(t_amostra,r_amostra,'r')
    %xlabel('tempo (s)');
    %legend('Sa?da do Filtro','Sa?da Amostrada');
    %axis([0 N -2 2])


    %figure
    fim=length(y);
    ruido=randn(1,fim)*sqrt(20);
    y=y+ruido;

    %t=0:1/Fs:N-1/Fs;
    %plot(t,y)
    %xlabel('tempo (s)');
    %axis([0 N -12 12])

    %figure
    r=conv(y,h)/Fs;
    fim=length(r);
    t=0:1/Fs:fim/Fs-1/Fs;
    %plot(t,r);
    t_amostra=[Fs:Fs:N*Fs];
    r_amostra=r(t_amostra);
    %t_amostra=t_amostra/Fs-1/Fs;
    %hold
    %stem(t_amostra,r_amostra,'r')
    %xlabel('tempo (s)');
    %legend('Sa?da do Filtro','Sa?da Amostrada');

    %DECISAO
    amostra_AP = double(r_amostra>0);
    
    % Compares the messages before and after the system and then registers
    % the calculated BER in order to generate a BER array with the values
    % generated by different amplitudes
    xBits = (inBits1==amostra_AP);
    xBits = (xBits==0);
    xBits = sum(xBits); % Get number of error bits
    BER_ap = cat(2,BER_ap,xBits/N); % Register the BER values

    %% Exemplo Ortogonal
    fprintf('Doing for Ortogonal and AMP = %i\n',AMP);

    Fs=100;
    Ts=1;

    bit1=ones(1,Fs);
    bit0=[ones(1,Fs/2) -ones(1,Fs/2)];

    % Generating random symbols
    y = zeros(1,N*Fs);   % Holds the random generated symbols
    inBits2 = zeros(1,N); % Holds the initial code message
    for i=1:N
        num = randint;
        inBits2(i) = num;
        if num==1
            y((1+(i-1)*100):100*i) = bit1;
        else
            y((1+(i-1)*100):100*i) = bit0;
        end
    end
    y=AMP.*y;
    %t=0:1/Fs:N-1/Fs;

    %figure;
    %plot(t,y)
    %xlabel('tempo (s)');
    %axis([0 N -2 2])

    h0=[-ones(1,Fs/2) ones(1,Fs/2)];
    h1=[ones(1,Fs)];

    %CONVOLUCAO SEM RUIDO
    r0=conv(y,h0)/Fs;
    r1=conv(y,h1)/Fs;
    %fim=length(r0);
    %t=0:1/Fs:fim/Fs-1/Fs;
    %figure;
    %subplot(2,1,1)
    %plot(t,r0);
    %hold on
    %subplot(2,1,2)
    %plot(t,r1);
    %hold on
    %t_amostra=[Fs:Fs:N*Fs];
    %r0_amostra=r0(t_amostra);
    %r1_amostra=r1(t_amostra);
    %t_amostra=t_amostra/Fs-1/Fs;
    %subplot(2,1,1)
    %stem(t_amostra,r0_amostra,'r')
    %axis([0 N -2 2])
    %subplot(2,1,2)
    %stem(t_amostra,r1_amostra,'r')
    %xlabel('tempo (s)');
    %legend('Sa?da do Filtro','Sa?da Amostrada');
    %axis([0 N -2 2])

    %RUIDO
    %figure
    fim=length(y);
    ruido=randn(1,fim)*sqrt(20);
    y=y+ruido;

    %t=0:1/Fs:N-1/Fs;
    %plot(t,y)
    %xlabel('tempo (s)');
    %axis([0 N -12 12])

    %CONVOLUCAO COM RUIDO
    r0=conv(y,h0)/Fs;
    r1=conv(y,h1)/Fs;
    %fim0=length(r0);
    %t0=0:1/Fs:fim0/Fs-1/Fs;
    %fim1=length(r1);
    %t1=0:1/Fs:fim1/Fs-1/Fs;
    %figure;
    %subplot(2,1,1)
    %plot(t0,r0);
    %hold on
    %subplot(2,1,2)
    %plot(t1,r1);
    %hold on
    t_amostra=[Fs:Fs:N*Fs];
    r0_amostra=r0(t_amostra);
    r1_amostra=r1(t_amostra);
    %t_amostra=t_amostra/Fs-1/Fs;
    %subplot(2,1,1)
    %stem(t_amostra,r0_amostra,'r')
    %axis([0 N -2 2])
    %subplot(2,1,2)
    %stem(t_amostra,r1_amostra,'r')
    %xlabel('tempo (s)');
    %legend('Sa?da do Filtro','Sa?da Amostrada');
    %axis([0 N -2 2])

    %DECISAO
    amostra_ORT = double(r1_amostra>r0_amostra);
    
    % Compares the messages before and after the system and then registers
    % the calculated BER in order to generate a BER array with the values
    % generated by different amplitudes
    xBits = (inBits2==amostra_ORT);
    xBits = (xBits==0);
    xBits = sum(xBits); % Get number of error bits
    BER_ort = cat(2,BER_ort,xBits/N); % Register the BER values
    
    EbN0 = AMP^2;
    Pb(j+1)=(3/2)*qfunc(sqrt(2)*EbN0); %BER te√≥rica.
    j=j+1;
end

% Generating plot with the energy and the BER values
figure;
plot(energy,BER_ap);
hold on;
plot(energy,BER_ort,'r');

i = energy;
figure
semilogy(i,Pb,'b-',i,BER_ap,'ro');
grid on
figure
semilogy(i,Pb,'b-',i,BER_ort,'ro');
grid on
toc
